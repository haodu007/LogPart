#############################
# Algorithm SR
#############################

M := []:
m := nops(Data); 

print(testing_SR);

for i from 1 to m do
      L := Data[i]:
      Timing := 0: 
      for j from 1 to nops(L) do 
           print(i_and_j_is); print((i,j));       
           h := L[j]:
           T := time():
           H  := LogPart:-LogarithmicPart(K, h, z, 'SR'):
           t := time()-T;
           if t > 3600 then
              break;
           end if:
           Timing := Timing + t:          
            print(verifying);
            TT :=time();
            # s := LogPart:-VerifyLogPart(K, h, H[1], z); # It takes time for verification 
            if s = false then
               break;
            end if;
            print(time_for_verifying); print(time()-TT); 
      end do:
      if s = false then
            print(error_found_in_SR); print((i,j));
            break;
      end if:
      if t > 3600 then
         break;
      end if; 
      M :=  [op(M), Timing/nops(L)]:
      save M, TimingForFig15SR;
end do: 




           
 